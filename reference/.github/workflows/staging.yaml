name: Staging Deploy

on:
  push:
    tags:
      - '**'
      - '!v*.*.*'
      - 'v*.*.*-beta'
      - 'v*.*.*-rc'
      - 'v*.*.*-alpha'

jobs:
  build-and-deploy:
    if: github.event.base_ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    # Add private key to Github secrets and
    # add public key to authorized_keys on server
    # see: https://github.com/webfactory/ssh-agent#creating-ssh-keys
    env:
      PROJECT_ROOT: dirfromhome
      PHP_VERSION: 7.4
      SSH_HOST: IP.AD.RE.SS
      SSH_USER: forge
      SSH_KEY: ${{ secrets.SSH_KEY }}
      NODE_VERSION: 12.x

    steps:
      # Pull repository into the current pipeline
      - name: Pull repository
        uses: actions/checkout@v2

      # Setup container with private SSH Key (used by rsync)
      - name: Load private SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # Use a specific version of Node
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Install PHP dependencies
      - name: Composer install
        run: composer install --no-interaction --no-progress --no-suggest --optimize-autoloader

      # Install NPM dependencies
      - name: Yarn install
        run: yarn install --ignore-engines --quiet --production

      # Build assets using locally installed Gulp
      - name: Build assets with Mix
        run: yarn run mix --production

      # rsync
      # exclude web/uploads is there to avoid deleting user uploaded files
      # Setting StrictHostKeyChecking=no will automatically add new host keys to the user known hosts files.
      - name: Deploy with rsync
        run: |
          rsync -azh --delete-after --exclude={"/public/uploads/","/backups","/.env","/scripts/.env.sh","/node_modules/","/.git/","/.github/"} -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/${{ env.PROJECT_ROOT }}/

      # execute Craft commands on remote server
      - name: Execute SSH commmands on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            cd ${{ env.PROJECT_ROOT }}
            chmod a+x craft
            ./scripts/backup_db.sh
            php craft db/backup
            php craft migrate/all
            php craft project-config/apply
            php craft clear-caches/all
            sudo -S service php${{ env.PHP_VERSION }}-fpm reload
